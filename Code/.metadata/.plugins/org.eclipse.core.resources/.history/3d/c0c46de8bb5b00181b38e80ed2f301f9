/**
 * Source code from the Java Parallel Programming Coursera course.
 */
package week3;

import java.util.concurrent.ForkJoinPool;

public class Exercicio {
	static int sum1, sum2;
	public static void main(String args[]) {
		double[] array = createLargeArray();
		
		long t1 = System.nanoTime();
		somaSeq(array);
		t1 = System.nanoTime() - t1;
		System.out.println("SEQUENTIAL: " + t1 + " nanosecs");
		
		long t2 = System.nanoTime();
		somaAsync(array);
		t2 = System.nanoTime() - t2;
		System.out.println("ASYNC: " + t2 + " nanosecs");
	}
	   
	public static double somaSeq(double[] x){
		double sum = 0;
		for(int i = 0; i < x.length; i++)
			sum += x[i];
		return sum;
	}
	
	public static double somaAsync(double[] x){
		SumArray t = new SumArray(x, 0, x.length);
		ForkJoinPool.commonPool().invoke(t);
		return t.ans; 
	}
	
	
	public static double[] createLargeArray(){
		double[] data = new double[10000];
		for (int i = 0; i < data.length; i++)
			data[i] = 2 * i;
		return data;
	}
}
