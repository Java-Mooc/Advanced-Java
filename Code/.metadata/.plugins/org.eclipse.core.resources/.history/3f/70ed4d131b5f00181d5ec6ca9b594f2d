package week4;

import java.util.concurrent.RecursiveAction;
import java.util.concurrent.RecursiveTask;

public class ModeArray extends RecursiveTask<Integer>{
	int vInicio;
	int vFim;
	int[] array;
	int[] valores;
	
	public ModeArray(int[] x, int l, int h) {
		array = x;
		vFim = h;
		vInicio = l;
		valores = new int[20];
	}

	protected Integer compute() {
		if(vFim - vInicio <= 1000) {
			for (int i = vInicio; i < vFim; i++){
				int valor = array[i];
				valores[valor]++;
			}
		}
		else {
			ModeArray modeArray1 = new ModeArray(array, vInicio, (vInicio + vFim)/2);
			ModeArray modeArray2 = new ModeArray(array, (vInicio + vFim)/2, vFim);
			modeArray1.fork();
			modeArray2.compute();
			modeArray1.join();
		}
		return max(valores);
	}

	private Integer max(int[] valores2) {
		int max = 0;
		int numero = 0;
		for(int i = 0; i < valores.length; i++)
			if(valores[i] >= max)
				numero = i;
		return numero;
	}
}