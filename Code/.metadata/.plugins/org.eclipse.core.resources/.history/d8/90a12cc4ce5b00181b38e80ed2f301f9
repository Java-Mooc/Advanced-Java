package week3;

import java.util.concurrent.RecursiveAction;

/*import java.util.concurrent.RecursiveAction;

public class SumArray extends RecursiveAction{
	int lo;
	int hi;
	double ans;
	double[] array;
	
	public SumArray(double[] x, int i, int length) {
		array = x;
		hi = length;
		lo = i;
	}

	@Override
	protected void compute() {
		if(hi - lo <= 5)
			for (int i = lo; i <hi; i++)
				ans += 1 / array[i];
		else {
			SumArray sumArray1 = new SumArray(array, lo, (hi+lo)/2);
			SumArray sumArray2 = new SumArray(array, (hi+lo)/2, hi);
			sumArray1.fork();
			sumArray2.compute();
			sumArray1.join();
			ans = sumArray1.ans + sumArray2.ans;
		}	
	}
}
*/

class SumArray extends RecursiveAction{
	int lo;
	int hi;
	double ans;
	double[] array;
	
	public SumArray(double[] x, int l, int h) {
		array = x;
		hi = h;
		lo = l;
	}

	@Override
	protected void compute() {
		if(hi - lo <= 1000)
			for (int i = lo; i <hi; i++)
				ans += array[i]/array.length;
		else {
			SumArray sumArray1 = new SumArray(array, lo, (hi+lo)/2);
			SumArray sumArray2 = new SumArray(array, (hi+lo)/2, hi);
			sumArray1.fork();
			sumArray2.compute();
			sumArray1.join();
			ans = sumArray1.ans + sumArray2.ans;
		}	
	}
}